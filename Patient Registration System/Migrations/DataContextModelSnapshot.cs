// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Patient_Registration_System.Model;

#nullable disable

namespace PatientRegistrationSystem.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Patient_Registration_System.Model.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ChargingRate")
                        .HasColumnType("REAL");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoctorAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DoctorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MORegistrationNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Specilization")
                        .HasColumnType("TEXT");

                    b.HasKey("DoctorId");

                    b.ToTable("doctors");
                });

            modelBuilder.Entity("Patient_Registration_System.Model.Other", b =>
                {
                    b.Property<int>("OtherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("OtherChargingRate")
                        .HasColumnType("REAL");

                    b.Property<string>("OtherName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OtherId");

                    b.ToTable("others");
                });

            modelBuilder.Entity("Patient_Registration_System.Model.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PatientAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientAge")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PatientBirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientBloodGroup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientContactNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientDepartment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientDoctorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientGender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientMaritalState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientOccupation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PatientPayment")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("PatientRegistrationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("PatientId");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("Patient_Registration_System.Model.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("PaymentAmount")
                        .HasColumnType("REAL");

                    b.HasKey("PaymentId");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("Patient_Registration_System.Model.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("TestChargingRate")
                        .HasColumnType("REAL");

                    b.Property<string>("TestName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TestId");

                    b.ToTable("tests");
                });

            modelBuilder.Entity("Patient_Registration_System.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserContactNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
